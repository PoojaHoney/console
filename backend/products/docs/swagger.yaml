definitions:
  main.Product:
    properties:
      createdBy:
        type: string
      createdOn:
        type: string
      databasesCount:
        type: integer
      description:
        type: string
      id:
        type: string
      image:
        type: string
      microServicesCount:
        type: integer
      name:
        type: string
      productID:
        type: string
      providers:
        items:
          type: string
        type: array
      status:
        type: string
      type:
        type: string
      updatedOn:
        type: string
    type: object
  main.ProductConfiguration:
    properties:
      artifactRegistryName:
        type: string
      createdOn:
        type: string
      defaultMemory:
        type: number
      defaultRAM:
        type: number
      environmentsSupport:
        items:
          $ref: '#/definitions/main.ProductEnvironmentSupport'
        type: array
      id:
        type: string
      networkTags:
        items:
          type: string
        type: array
      productID:
        type: string
      providerPermissions:
        items:
          $ref: '#/definitions/main.ProductProviderPermissions'
        type: array
      startupScriptFilePath:
        type: string
      status:
        type: string
      updatedOn:
        type: string
    type: object
  main.ProductEnvironmentSupport:
    properties:
      enabled:
        type: boolean
      environment:
        type: string
      provider:
        type: string
    type: object
  main.ProductMicroService:
    properties:
      basePath:
        type: string
      createdOn:
        type: string
      host:
        type: string
      name:
        description: ID         primitive.ObjectID            `json:"id" bson:"_id"
          description:"Microservice ID" editable:"false" enabled:"false" label:"ID"
          unique:"true"`
        type: string
      portNumber:
        type: string
      productDatabases:
        items:
          $ref: '#/definitions/main.ProductMicroServiceDatabase'
        type: array
      productID:
        type: string
      status:
        type: string
      type:
        type: string
      updatedOn:
        type: string
      version:
        type: string
    type: object
  main.ProductMicroServiceDatabase:
    properties:
      database:
        type: string
      defaultPassword:
        type: string
      defaultUsername:
        type: string
      host:
        type: string
      image:
        type: string
      mockDataPath:
        type: string
      name:
        type: string
      portNumber:
        type: string
      type:
        type: string
      version:
        type: string
    type: object
  main.ProductPlan:
    properties:
      active:
        type: string
      createdOn:
        type: string
      description:
        type: string
      image:
        type: string
      name:
        type: string
      plan:
        type: string
      productID:
        description: ID          primitive.ObjectID `json:"id" bson:"_id" description:"Plan
          ID" editable:"false" enabled:"false" label:"ID" unique:"true"`
        type: string
      status:
        type: string
      updatedOn:
        type: string
    type: object
  main.ProductProviderPermissions:
    properties:
      enabled:
        type: boolean
      permissions:
        items:
          type: string
        type: array
      provider:
        type: string
    type: object
  main.ProductResource:
    properties:
      createdOn:
        type: string
      deploymentTemplateLocation:
        type: string
      deploymentTemplateName:
        type: string
      environmentVariablesFile:
        type: string
      exposedEnvVariables:
        items:
          type: string
        type: array
      kind:
        description: ID                         primitive.ObjectID        `json:"id"
          bson:"_id" description:"Resource ID" editable:"false" enabled:"false" label:"ID"
          unique:"true"`
        type: string
      name:
        type: string
      productID:
        type: string
      productVersion:
        type: string
      status:
        type: string
      taskType:
        type: string
      updatedOn:
        type: string
      versions:
        items:
          $ref: '#/definitions/main.ProductResourceVersions'
        type: array
    type: object
  main.ProductResourceVersions:
    properties:
      createdOn:
        type: string
      developmentTag:
        type: string
      latest:
        type: boolean
      productTag:
        type: string
      resourceName:
        type: string
      stagingTag:
        type: string
      testingTag:
        type: string
      updatedOn:
        type: string
    type: object
  main.ProductVersion:
    properties:
      buildNumber:
        type: string
      createdOn:
        type: string
      description:
        type: string
      name:
        description: ID          primitive.ObjectID `json:"id" bson:"_id" description:"Plan
          ID" editable:"false" enabled:"false" label:"ID" unique:"true"`
        type: string
      productID:
        type: string
      status:
        type: string
      type:
        type: string
      updatedOn:
        type: string
      version:
        type: string
    type: object
info:
  contact: {}
  description: Product Microservice for Console
  version: "1.0"
paths:
  /api/product/v1/activateProduct:
    post:
      consumes:
      - application/json
      description: Activate the product, makes the product available to the user/customers.
      parameters:
      - description: Object Containing Product id
        in: body
        name: product
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Activates the product
  /api/product/v1/createConfiguration:
    post:
      consumes:
      - application/json
      description: Creates product Configuration with the provided Configuration data.
      parameters:
      - description: Configuration object containing Configuration data
        in: body
        name: configuration
        required: true
        schema:
          $ref: '#/definitions/main.ProductConfiguration'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Creates product Configuration
  /api/product/v1/createMicroService:
    post:
      consumes:
      - application/json
      description: Creates new microservices for a product.
      parameters:
      - description: Microservices array containing microservice data
        in: body
        name: microservices
        required: true
        schema:
          $ref: '#/definitions/main.ProductMicroService'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Creates new microservices for a product
  /api/product/v1/createPlan:
    post:
      consumes:
      - application/json
      description: Creates product Plans with the provided Plans data.
      parameters:
      - description: Plans array containing Product Plans data
        in: body
        name: Plans
        required: true
        schema:
          $ref: '#/definitions/main.ProductPlan'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Creates product Plans
  /api/product/v1/createProduct:
    post:
      consumes:
      - application/json
      description: Creates a new product with the provided product data.
      parameters:
      - description: Product object containing product data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/main.Product'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Creates a new product
  /api/product/v1/createResource:
    post:
      consumes:
      - application/json
      description: Creates a product resources with the provided resource data.
      parameters:
      - description: Resources array containing resources data of a product
        in: body
        name: resources
        required: true
        schema:
          $ref: '#/definitions/main.ProductResource'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Creates a product resources
  /api/product/v1/createVersion:
    post:
      consumes:
      - application/json
      description: Creates product versions with the provided versions data.
      parameters:
      - description: Versions array containing Product versions data
        in: body
        name: version
        required: true
        schema:
          $ref: '#/definitions/main.ProductVersion'
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Creates product versions
  /api/product/v1/fieldCatalogues:
    get:
      description: Gets all fields catalogues of product service tables.
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Fields Catalogues of product service
securityDefinitions:
  BearerAuth:
    description: Bearer token authentication
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
